version: '3.8'
services:
  syncing-server-js:
    image: standardnotes/syncing-server-js:1.27.0
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./docker/entrypoint.sh", "start-web"
    ]
    env_file: .env
    environment:
      PORT: 3000
    restart: unless-stopped
    networks:
      - standardnotes_standalone

  syncing-server-js-worker:
    image: standardnotes/syncing-server-js:1.27.0
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./wait-for.sh", "syncing-server-js", "3000",
       "./docker/entrypoint.sh", "start-worker"
    ]
    env_file: .env
    restart: unless-stopped
    networks:
      - standardnotes_standalone

  api-gateway:
    image: standardnotes/api-gateway:1.5.1
    env_file: docker/api-gateway.env
    ports:
      - ${EXPOSED_PORT}:3000
    environment:
      PORT: 3000
      AUTH_JWT_SECRET: '${AUTH_JWT_SECRET}'
    entrypoint: [
      "./wait-for.sh", "auth", "3000",
      "./wait-for.sh", "syncing-server-js", "3000",
      "./docker/entrypoint.sh", "start-web"
    ]
    networks:
      - standardnotes_standalone

  auth:
    image: standardnotes/auth:1.7.3
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./wait-for.sh", "syncing-server-js", "3000",
      "./docker/entrypoint.sh", "start-web"
    ]
    env_file: docker/auth.env
    environment:
      DB_HOST: '${DB_HOST}'
      DB_REPLICA_HOST: '${DB_REPLICA_HOST}'
      DB_PORT: '${DB_PORT}'
      DB_DATABASE: '${DB_DATABASE}'
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_DEBUG_LEVEL: '${DB_DEBUG_LEVEL}'
      DB_MIGRATIONS_PATH: '${DB_MIGRATIONS_PATH}'
      REDIS_URL: '${REDIS_URL}'
      JWT_SECRET: '${JWT_SECRET}'
      AUTH_JWT_SECRET: '${AUTH_JWT_SECRET}'
      PSEUDO_KEY_PARAMS_KEY: '${PSEUDO_KEY_PARAMS_KEY}'
      ACCESS_TOKEN_AGE: '${ACCESS_TOKEN_AGE}'
      REFRESH_TOKEN_AGE: '${REFRESH_TOKEN_AGE}'
      EPHEMERAL_SESSION_AGE: '${EPHEMERAL_SESSION_AGE}'
      MAX_LOGIN_ATTEMPTS: '${MAX_LOGIN_ATTEMPTS}'
      FAILED_LOGIN_LOCKOUT: '${FAILED_LOGIN_LOCKOUT}'
    networks:
      - standardnotes_standalone

  auth-worker:
    image: standardnotes/auth:1.7.3
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./wait-for.sh", "auth", "3000",
      "./docker/entrypoint.sh", "start-worker"
    ]
    env_file: docker/auth.env
    environment:
      DB_HOST: '${DB_HOST}'
      DB_REPLICA_HOST: '${DB_REPLICA_HOST}'
      DB_PORT: '${DB_PORT}'
      DB_DATABASE: '${DB_DATABASE}'
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_DEBUG_LEVEL: '${DB_DEBUG_LEVEL}'
      DB_MIGRATIONS_PATH: '${DB_MIGRATIONS_PATH}'
      REDIS_URL: '${REDIS_URL}'
      JWT_SECRET: '${JWT_SECRET}'
      AUTH_JWT_SECRET: '${AUTH_JWT_SECRET}'
      PSEUDO_KEY_PARAMS_KEY: '${PSEUDO_KEY_PARAMS_KEY}'
      ACCESS_TOKEN_AGE: '${ACCESS_TOKEN_AGE}'
      REFRESH_TOKEN_AGE: '${REFRESH_TOKEN_AGE}'
      EPHEMERAL_SESSION_AGE: '${EPHEMERAL_SESSION_AGE}'
      MAX_LOGIN_ATTEMPTS: '${MAX_LOGIN_ATTEMPTS}'
      FAILED_LOGIN_LOCKOUT: '${FAILED_LOGIN_LOCKOUT}'
    networks:
      - standardnotes_standalone

  db:
    image: mysql:5.6
    environment:
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    ports:
      - 3306
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - standardnotes_standalone

  cache:
    image: redis:6.0-alpine
    volumes:
      - ./data/redis/:/data
    ports:
      - 6379
    networks:
      - standardnotes_standalone

networks:
  standardnotes_standalone:
    name: standardnotes_standalone
